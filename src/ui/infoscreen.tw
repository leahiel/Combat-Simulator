:: Info_Description_Widget [widget .infoscreen .helper nostats]
<<widget EquipmentButtonInInfoScreen>>
    /** Normally I would write error the following error, but since this widget won't ever be used again, who cares:
     *  WriteError: _args[0] should be "weapon" || "armor" || "accessory" 
     */
     
    /* We capture because the <<but>> macro has its own _args. */
    <<set _captureArg to _args[0]>>  
    <<set _tempstr to _args[0] + "Here">>

    <span class="equippableInfoScreen">
        <span @id="_tempstr"></span>
        /* Create the item plate. */
        <<run $info.current.equippables[_captureArg].itemplate(`#${_captureArg}Here`);>>

        /* Create "Swap" and "Mod" buttons. */
        <<set _tempstr to _captureArg + "InfoScreenButtons">>
        <span @id="_tempstr">
            <<capture _captureArg>>
                <<but "Swap">>
                    <<script>>
                        let tempstr2;
                        let tempstr3;

                        switch (State.temporary.captureArg) {
                            case "weapon":
                                tempstr2 = "Weapons";
                                tempstr3 = "Weapon";
                                break;
                            case "armor":
                                tempstr2 = "Armors";
                                tempstr3 = "Armor";
                                break;
                            case "accessory":
                                tempstr2 = "Accessories";
                                tempstr3 = "Accessory";
                                break;
                        }

                        Dialog.setup(`${tempstr2}`, "dialogEquipmentSwap");
                        Dialog.wiki(`<<SlotMenuInfo ${State.temporary.captureArg}>>`);
                        Dialog.open();
                    <</script>>
                <</but>>
            <</capture>>
            <<if $info.current.equippables[_captureArg] === null || $info.current.equippables[_captureArg].type === "unequipped">>
                <<disable>>
                    <<but "Mod">>
                    <</but>>
                <</disable>>
            <<else>>
                <<capture _captureArg>>
                    <<but "Mod">>
                        <<script>>
                            let tempstr2;
                            let tempstr3;

                            switch (State.temporary.captureArg) {
                                case "weapon":
                                    tempstr2 = "Weapons";
                                    tempstr3 = "Weapon";
                                    break;
                                case "armor":
                                    tempstr2 = "Armors";
                                    tempstr3 = "Armor";
                                    break;
                                case "accessory":
                                    tempstr2 = "Accessories";
                                    tempstr3 = "Accessory";
                                    break;
                            }

                            Dialog.setup(tempstr2, "dialogEquipmentSwap");
                            Dialog.wiki(`<<SlotModMenuInfo ${State.temporary.captureArg}>>`);
                            Dialog.open();
                        <</script>>
                    <</but>>
                <</capture>>
            <</if>>
        </span>
        /* Position "Swap" and "Mod" buttons. */
        <<script>>
            /* We do this because by the time the async runs, the State changes. */
            let tmpstr = State.temporary.captureArg;

            setup.fns.waitForElm(`span.itemPlate.${tmpstr}`).then(() => {
                setup.fns.waitForElm(`#${tmpstr}InfoScreenButtons`).then(() => {
                    $(`span.itemPlate.${tmpstr}`).append($(`#${tmpstr}InfoScreenButtons`));
                });
            });
        <</script>>
    </span>
<</widget>>



:: Info_Description [.infoscreen .helper nostats]
<<if $info.current === null>>
    Info Screen Description.
<<else>>
    <<EquipmentButtonInInfoScreen "weapon">>
    <<EquipmentButtonInInfoScreen "armor">>
    <<EquipmentButtonInInfoScreen "accessory">>

    <<run $('#infoScreenBottomMenuButtons').empty().wiki(Story.get("Info_Button_Back").processText());>>
<</if>>



:: Slot_Menu_Info_Widget [widget .infoscreen .helper nostats]
<<widget SlotMenuInfo>>
    /** Normally I would write error the following error, but since this widget won't ever be used again, who cares:
     *  WriteError: _args[0] should be "weapon" || "armor" || "accessory" 
     */
    /* REVIEW: Do I want to add a button to this dialogue to switch to the appropriate mod menu dialogue? */

    /* Set tempvars. */
    <<set _listboxstr to "listbox-" + _args[0]>>
    <<script>>
        switch (State.temporary.args[0]) {
            case "weapon":
                State.temporary.strplural = "weapons";
                break;
            case "armor":
                State.temporary.strplural = "armors";
                break;
            case "accessory":
                State.temporary.strplural = "accessories";
                break;
        }
    <</script>>

    /* Create listbox. */
    <select @id="_listboxstr" class="macro-listbox" @name="_listboxstr" tabindex="0"> 
        <<for _i, _equippable range $account.inventory[_strplural]>>
            /* TODO: Default option should be the currently equipped weapon. */
            /* NYI: add the `disabled` attribute if we don't own the accessory: https://www.w3schools.com/TAGS/att_option_disabled.asp */
            /* TODO: $account.inventory.weapons should probably be: [[weapon, bool], [weapon, bool]], where weapon os obj and bool is "obtained". */
            <option @value=_i>_equippable.name</option>
        <</for>>
    </select>

    /* Make listbox selection change related vars. */
    <<script>>
        setup.fns.waitForElm(`#${State.temporary.listboxstr}`).then(() => {
            $(`#${State.temporary.listboxstr}`).change( function () {
                State.variables.info.current.equippables.weapon = State.variables.account.inventory.weapons[$(`#${State.temporary.listboxstr}`).val()];

                $('#infoScreenBottomMenuButtons').wiki(Story.get("Char_Equipment_Select_Info").processText());
            });
        });
    <</script>>
<</widget>>



:: Slot_ModMenu_Info_Widget [widget .infoscreen .helper nostats]
<<widget SlotModMenuInfo>>
    /** Normally I would write error the following error, but since this widget won't ever be used again, who cares:
     *  WriteError: _args[0] should be "weapon" || "armor" || "accessory" 
     */
    /* REVIEW: Do I want to add a button to this dialogue to switch to the appropriate swap menu dialogue? */

    /* Set tempvars. */
    <<set _listboxstr to "listbox-" + _args[0] + "Mods">>
    <<script>>
        switch (State.temporary.args[0]) {
            case "weapon":
                State.temporary.strcap = "Weapon";
                break;
            case "armor":
                State.temporary.strcap = "Armor";
                break;
            case "accessory":
                State.temporary.strcap = "Accessory";
                break;
        }
    <</script>>


    <<script>>
        /* Temp array with all the mods that have the slot type. */
        State.temporary.viableModList = [];
        for (let mod in State.variables.account.inventory.mods) {
            if (State.variables.account.inventory.mods[mod].type === State.temporary.args[0]) {
                State.temporary.viableModList.push(State.variables.account.inventory.mods[mod]);
            }
        }

        /* TODO: If mod is already on equipment, remove it. */
    <</script>>

    /* Create a listbox element for every modslot, populate it with viable mods array. */
    <<for _i = 0; _i < $info.current.equippables[_args[0]].modslots; _i++>>
        Slot _i:
        <select @id="_listboxstr" @class="_listboxstr" @name="_listboxstr" tabindex="0" @value=_i> 
            <<for _j, _mod range _viableModList>>
                /* TODO: Default option should show the currently equipped mod. */
                /* TODO: Default option should also be able to be chosen. */
                <option @value=_j>_mod.name t._mod.tier</option>
            <</for>>
        </select>
        <br>
    <</for>>

    /* Make listbox selection change related vars. */
    <<script>>
        /* Wait for all .listbox-slotMods to be done */
        setup.fns.waitForNumberOfElm(`.${State.temporary.listboxstr}`, State.variables.info.current.equippables[State.temporary.args[0]].modslots).then(() => {
            $(`.${State.temporary.listboxstr}`).change( function () {
                State.variables.info.current.equippables[State.temporary.args[0]].mods[$(this).attr("value")] = State.temporary.viableModList[$(this).val()];

                /* Reload this dialogue so that viableModList is updated. */
                Dialog.setup(`${State.temporary.strcap} Mods`, "dialogEquipmentMod");
                Dialog.wiki(`<<SlotModMenuInfo ${State.temporary.strcap}>>`);
                Dialog.open();
            });
        });
    <</script>>
<</widget>>



:: Players_Info [.infoscreen .helper nostats]
<<script>>
    $('#infoScreenBottomMenuButtons').empty();
    let solstr = "";
    solstr += `<<PlayerInfo $pc>>`;           
    solstr += `<<PlayerInfo $pp>>`;           
    solstr += `<<PlayerInfo $tp1>>`;           
    solstr += `<<PlayerInfo $tp2>>`;           

    $('#infoScreenBottomMenuButtons').wiki(solstr);
<</script>>



:: Player_Info_Widget [widget .infoscreen .helper nostats]
<<widget PlayerInfo>>
    /** Normally I would write error the following error, but since this widget won't ever be used again, who cares:
     *  WriteError: _args[0] should be $pc || $pp || $tp1 || $tp2 
     */

    /* Create the character button that brings up that character's equipment. */
    <<if _args[0]>>
        <<but _args[0].name class "bottomInfoButton">>
            <<set $info.current = _args[0]>>
            <<run $('#infoScreenBottomMenuButtons').wiki(Story.get("Char_Equipment_Select_Info").processText());>>
        <</but>>
    <<else>>
        <<disable>>
            <<but "Char Not Present" class "bottomInfoButton">>
            <</but>>
        <</disable>>
    <</if>>
<</widget>>



:: Info_Button_Back [.infoscreen .helper nostats]
<<but "Back" id "infoBack" class "bottomInfoButton">>
    <<set $info.current = null>>
    <<run $('#infoScreenMiddleMenuButtons').empty()>>
    <<run $('#infoScreenBottomMenuButtons').empty().wiki(Story.get("Players_Info").processText())>>
<</but>>



:: Char_Equipment_Select_Info [.infoscreen .helper nostats]
<<run $('#infoScreenMiddleMenuButtons').empty().wiki(Story.get("Info_Description").processText());>>
<<run $('#infoScreenBottomMenuButtons').empty().wiki(Story.get("Info_Button_Back").processText());>>
